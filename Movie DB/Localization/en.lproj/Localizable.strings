/* Title of an alert that informs the user that he tried to add a media object twice. The variable is the media title. */
"addMedia.alert.alreadyAdded.message %@" = "You already have '%@' in your library.";

/* Title of an alert that informs the user that he tried to add a media object twice */
"addMedia.alert.alreadyAdded.title" = "Already Added";

/* Title of an alert showing an error message while loading the media */
"addMedia.alert.errorLoading.title" = "Error Loading Media";

/* The label of the button to dismiss the 'add media' sheet */
"addMedia.navBar.button.close" = "Close";

/* Navigation bar title of the 'add media' sheet */
"addMedia.navBar.title" = "Add Media";

/* Description of the TMDb API error that occurs when the app tries to get search results for an invalid range of pages */
"apiError.invalidPageRange.description" = "Invalid range of pages. Please specify a valid range.";

/* Description of the TMDb API error that occurs when the server returns an invalid response */
"apiError.invalidResponse.description" = "The request returned invalid data.";

/* Description of the TMDb API error that occurs when the app tries to get search results for a page that does not exist */
"apiError.pageOutOfBounds.description" = "Requested page is out of bounds";

/* Description of the TMDb API error that occurs when the server returns an unexpected status code. The parameter is the status code */
"apiError.statusNotOk.description %lld" = "Error executing request. HTTP Reponse code %lld.";

/* Description of the TMDb API error that occurs when the API request is unauthorized due to a misconfigured API key */
"apiError.unauthorized.description" = "API call unauthorized. Invalid API key.";

/* Description of the TMDb API error that occurs when the server returns an unknown response. The first parameter is the status code. The second parameter is the localized response */
"apiError.unknown.description %lld %@" = "HTTP Error %lld: %@";

/* Description of the TMDb API error that occurs during updating of the media objects */
"apiError.updateError.description" = "Error updating the media.";

/* The title of an alert informing the user about an error while loading the cast information */
"detail.alert.errorLoadingCastTitle" = "Error Loading Cast";

/* Button of an alert to confirm adding a new tag */
"detail.alert.newTag.button.add" = "Add";

/* Text of an alert for adding a new tag */
"detail.alert.newTag.message" = "Enter a name for the new tag.";

/* Title of an alert for adding a new tag */
"detail.alert.newTag.title" = "New Tag";

/* Rename button to confirm renaming a tag */
"detail.alert.renameTag.button.rename" = "Rename";

/* Message of the tag renaming alert */
"detail.alert.renameTag.message" = "Enter a new name for the tag.";

/* Title of the tag renaming alert */
"detail.alert.renameTag.title" = "Rename Tag";

/* Message of an alert informing the user that the tag they tried to create already exists */
"detail.alert.tagAlreadyExists.message" = "There is already a tag with that name.";

/* Message of an alert informing the user that the tag they tried to create already exists */
"detail.alert.tagAlreadyExists.title" = "Tag Already Exists";

/* The button label in the detail of a media object that leads to the cast information. */
"detail.basicInfo.cast" = "Cast";

/* The section header for the basic information section in the detail view */
"detail.basicInfo.header" = "Basic Information";

/* The headline for the 'description' property in the detail view */
"detail.basicInfo.headline.description" = "Description";

/* The headline for the 'first aired' property in the detail view */
"detail.basicInfo.headline.firstAired" = "First Aired";

/* The headline for the 'genres' property in the detail view */
"detail.basicInfo.headline.genres" = "Genres";

/* The headline for the 'last aired' property in the detail view */
"detail.basicInfo.headline.lastAired" = "Last Aired";

/* The headline for the 'last episode' property in the detail view */
"detail.basicInfo.headline.lastEpisode" = "Last Episode";

/* The headline for the 'next episode' property in the detail view */
"detail.basicInfo.headline.nextEpisode" = "Next Episode";

/* The headline for the 'original language' property in the detail view */
"detail.basicInfo.headline.originalLanguage" = "Original Language";

/* The headline for the 'original title' property in the detail view */
"detail.basicInfo.headline.originalTitle" = "Original Title";

/* The headline for the 'production countries' property in the detail view */
"detail.basicInfo.headline.productionCountries" = "Production Countries";

/* The headline for the 'release date' property in the detail view */
"detail.basicInfo.headline.releaseDate" = "Release Date";

/* The headline for the 'runtime' property in the detail view */
"detail.basicInfo.headline.runtime" = "Runtime";

/* The headline for the 'seasons' property in the detail view */
"detail.basicInfo.headline.seasons" = "Seasons";

/* The headline for the 'show type' property in the detail view */
"detail.basicInfo.headline.showType" = "Show Type";

/* The headline for the 'status' property in the detail view */
"detail.basicInfo.headline.status" = "Status";

/* A string that displays a formatted duration in minutes and hours/minutes. E.g. '90 minutes (1h 30m)'. The first parameter is the formatted duration string in minutes. The second parameter is the formatted duration string in hours and minutes. */
"detail.basicInfo.runtime.minutesAndHours %@ %@" = "%@ (%@)";

/* Season/Episode abbreviation for the 'next/last episode to air' field, without a date. First argument: season number, second argument: episode number */
"detail.episodeAirDate %lld %lld" = "S%lldE%lld";

/* Season/Episode abbreviation for the 'next/last episode to air' field, including the date. First argument: season number, second argument: episode number, third argument: formatted date */
"detail.episodeAirDate %lld %lld %@" = "S%lldE%lld (%@)";

/* The text displayed in the detail view when the media object to display could not be loaded */
"detail.errorLoadingText" = "Error loading media";

/* The section header for the extended information section in the detail view */
"detail.extendedInfo.header" = "Extended Information";

/* The headline for the 'budget' property in the detail view */
"detail.extendedInfo.headline.budget" = "Budget";

/* The headline for the 'created by' property in the detail view */
"detail.extendedInfo.headline.createdBy" = "Created by";

/* The headline for the 'homepage' property in the detail view */
"detail.extendedInfo.headline.homepage" = "Homepage";

/* The headline for the 'imdb id' property in the detail view */
"detail.extendedInfo.headline.imdbID" = "IMDB ID";

/* The headline for the 'networks' property in the detail view */
"detail.extendedInfo.headline.networks" = "Networks";

/* The headline for the 'popularity' property in the detail view */
"detail.extendedInfo.headline.popularity" = "Popularity";

/* The headline for the 'production companies' property in the detail view */
"detail.extendedInfo.headline.productionCompanies" = "Production Companies";

/* The headline for the 'revenue' property in the detail view */
"detail.extendedInfo.headline.revenue" = "Revenue";

/* The headline for the 'scoring' property in the detail view */
"detail.extendedInfo.headline.scoring" = "Scoring";

/* The headline for the 'tagline' property in the detail view */
"detail.extendedInfo.headline.tagline" = "Tagline";

/* The headline for the 'tmdb id' property in the detail view */
"detail.extendedInfo.headline.tmdbID" = "TMDb ID";

/* The section header for the information section in the detail view */
"detail.information.header" = "Information";

/* The 'favorite' action in the media menu that lets the user mark a media as favorite. */
"detail.menu.favorite" = "Favorite";

/* The 'unfavorite' action in the media menu that lets the user mark a media as not favorite anymore. */
"detail.menu.unfavorite" = "Unfavorite";

/* The section header for the metadata section in the detail view */
"detail.metadata.header" = "Metadata";

/* The headline for the 'creation date' property in the detail view */
"detail.metadata.headline.created" = "Created";

/* The headline for the 'internal id' property in the detail view */
"detail.metadata.headline.internalID" = "Internal ID";

/* The headline for the 'last modified' property in the detail view */
"detail.metadata.headline.lastModified" = "Last Modified";

/* The navigation bar title for the detail view when an error occured during loading */
"detail.navBar.errorTitle" = "Error";

/* The navigation bar title for the notes in the detail view */
"detail.notes.navBar.title" = "Notes";

/* The navigation bar title for the seasons info in the detail view */
"detail.seasonsInfo.navBar.title" = "Seasons";

/* (No Comment) */
"detail.tags.header" = "Select all tags that apply";

/* The navigation bar title for the tags in the detail view */
"detail.tags.navBar.title" = "Tags";

/* The section header for the user data section in the detail view */
"detail.userData.header" = "User Data";

/* The headline for the 'notes' property in the detail view */
"detail.userData.headline.notes" = "Notes";

/* The headline for the 'personal rating' property in the detail view */
"detail.userData.headline.personalRating" = "Personal Rating";

/* The headline for the 'tags' property in the detail view */
"detail.userData.headline.tags" = "Tags";

/* The headline for the 'watch again' property in the detail view */
"detail.userData.headline.watchAgain" = "Watch again?";

/* The headline for the 'watched' property in the detail view */
"detail.userData.headline.watched" = "Watched?";

/* Label in the detail view of a media object that describes the absence of any user-provided notes. */
"detail.userData.noNotes" = "No Notes";

/* The label of the tag list in the user data section of the detail view specifying that there are no tags for this media. */
"detail.userData.tags.none" = "None";

/* The picker value of the detail view's user data section which the user chooses if they did not watch the media object */
"detail.userData.watched.picker.notWatched" = "No";

/* The picker value of the detail view's user data section which the user chooses if they watched the media object partially */
"detail.userData.watched.picker.partiallyWatched" = "Partially";

/* The picker value of the detail view's user data section which the user chooses if they watched the media object */
"detail.userData.watched.picker.watched" = "Yes";

/* The header in the editing view where the user specifies up to which season/episode they watched. */
"detail.userData.watchedShow.header" = "Up to which Episode did you watch?";

/* The label of the picker in the detail view where the user specifies up to which episode they watched. Label specifies that the user watched all episodes of the season. */
"detail.userData.watchedShow.label.allEpisodes" = "All Episodes";

/* The label of the picker in the detail view where the user specifies up to which episode they watched. Label specifies the episode number. The parameter is the episode number. */
"detail.userData.watchedShow.label.episodeNumber %lld" = "Episode %lld";

/* The label in the detail view describing that the user has not watched the show */
"detail.userData.watchedShow.label.no" = "No";

/* The label of the picker in the detail view where the user specifies up to which season they watched. Label specifies that the user did not watch the show. */
"detail.userData.watchedShow.label.notWatched" = "Not Watched";

/* The label in the detail view describing that the user has watched up to a specific season of the show. The parameter is the season number. */
"detail.userData.watchedShow.label.season %lld" = "Season %lld";

/* The label in the detail view describing that the user has watched up to a specific episode of a season of the show. The first parameter is the season number. The second parameter is the episode number. */
"detail.userData.watchedShow.label.seasonAndEpisode %lld %lld" = "Season %lld, Episode %lld";

/* The label of the picker in the detail view where the user specifies up to which season they watched. Label specifies the season number. The parameter is the season number. */
"detail.userData.watchedShow.label.seasonNumber %lld" = "Season %lld";

/* The label in the detail view describing that it is unknown whether the user has watched the show */
"detail.userData.watchedShow.label.unknown" = "Unknown";

/* A type of watch provider (flatrate, ads, buy) */
"detail.watchprovider.ads" = "Ads";

/* A type of watch provider (flatrate, ads, buy) */
"detail.watchprovider.buy" = "Buy";

/* A type of watch provider (flatrate, ads, buy) */
"detail.watchprovider.flatrate" = "Flatrate";

/* Attribution below the watch providers panel that attributes the source of the data to JustWatch.com */
"detail.watchProviders.attribution" = "Powered by [JustWatch.com](https://www.justwatch.com)";

/* The label/heading of the watch providers panel in the media detail */
"detail.watchProviders.label" = "Watch Providers";

/* Cancel button to dismiss an alert popup */
"generic.alert.button.cancel" = "Cancel";

/* Okay button to deny an alert popup */
"generic.alert.button.no" = "No";

/* Okay button to dismiss an alert popup */
"generic.alert.button.okay" = "Ok";

/* Yes button to confirm an alert popup */
"generic.alert.button.yes" = "Yes";

/* Title of an alert informing the user about an error */
"generic.alert.title.error" = "Error";

/* Generic error text to display when a view failed to load */
"generic.errorText" = "Error";

/* A generic 'Loading...' string, displayed with a progress view */
"generic.loadingText" = "Loading...";

/* The navigation bar title for a view that is still loading */
"generic.navBar.loadingTitle" = "Loading";

/* The navigation bar button label for the button that resets the currently visible range editing view */
"generic.picker.navBar.button.reset" = "Reset";

/* The label displayed by a picker when there are no possible values to pick from */
"generic.picker.noValues" = "No entries";

/* A range editing label that prefixes the actual value that is currently selected for the lower bound of the range. */
"generic.picker.range.from" = "From";

/* A range editing label that describes the actual value that is currently selected for the lower bound of the range. The parameter is the value. */
"generic.picker.range.from.value %@" = "From %@";

/* A range editing label that prefixes the actual value that is currently selected for the upper bound of the range. */
"generic.picker.range.to" = "To";

/* A range editing label that describes the actual value that is currently selected for the upper bound of the range. The parameter is the value. */
"generic.picker.range.to.value %@" = "To %@";

/* An option in a picker view */
"generic.picker.value.no" = "No";

/* An option in a picker view */
"generic.picker.value.yes" = "Yes";

/* A generic string describing that a value or some property is unknown */
"generic.unknown" = "Unknown";

/* Title of an alert informing the user about an error while loading the app's data */
"global.alert.errorLoadingCoreData.title" = "Error Loading Data";

/* Title of an alert informing the user about an error during saving */
"global.alert.errorSavingCoreData.title" = "Error Saving Data";

/* A string describing a type of media */
"global.strings.movie" = "Movie";

/* A string describing a type of media */
"global.strings.show" = "TV Show";

/* Title of an alert informing the user about an error while loading the available languages */
"languageChooser.alert.errorLoading.title" = "Error loading languages";

/* Placeholder text to display while loading the available languages in the language chooser onboarding screen */
"languageChooser.loadingText" = "Loading Languages...";

/* The navigation bar title for the language chooser view */
"languageChooser.navBar.title" = "Select Language";

/* The attribution for the app icon. The parameter is the attribution link. */
"legal.appIconAttribution %@" = "App Icon: %@";

/* The legal notice in the legal view. The parameter is the legal e-mail address. */
"legal.legalNotice %@" = "All content and images are properties of their respective owners.\nFor legal concerns, contact %@.";

/* The navigation bar title for the legal view */
"legal.navBar.title" = "Legal";

/* The message of an alert informing the user about an error during a media update. The first argument is the title of the media object and the second argument is the error description. */
"library.alert.errorUpdating.message %@ %@" = "Error Updating %@: %@";

/* Title of an alert informing the user about an error during a media update */
"library.alert.errorUpdating.title" = "Error Updating";

/* Button label for the apply button in the filter view */
"library.filter.button.apply" = "Apply";

/* Button label for the reset button in the filter view */
"library.filter.button.reset" = "Reset";

/* The label of the genres picker in the library's filter view */
"library.filter.information.label.genres" = "Genres";

/* The label for the 'media type' picker in the library's filter view */
"library.filter.information.label.mediaType" = "Media Type";

/* The personal rating one assign a media object as a value of 0 to 5 stars */
"library.filter.information.label.personalRating" = "Personal Rating";

/* The label for the status picker in the library's filter view */
"library.filter.information.label.status" = "Status";

/* The label for the picker for selecting the release year in the library filter view */
"library.filter.information.label.year" = "Year";

/* Year label in the filter settings */
"library.filter.information.label.year %lld" = "%lld";

/* Year range label in the filter settings. The first parameter is the lower bound of the range. The second parameter is the upper bound of the range (inclusive) */
"library.filter.information.label.year.range %lld %lld" = "%lld to %lld";

/* The navigation bar title for the media type field in the library's filter view */
"library.filter.mediaType.navBar.title" = "Media Type";

/* The navigation bar title for the library's filter view */
"library.filter.navBar.title" = "Filter Options";

/* The heading in the library filter view for the properties that are specific to tv shows */
"library.filter.showSpecific.header" = "Show Specific";

/* The label for the picker in the filter view that lets the user choose the range of number of seasons to filter by */
"library.filter.showSpecific.label.seasons" = "Seasons";

/* The label for the show type picker in the library's filter view */
"library.filter.showSpecific.label.showType" = "Show Type";

/* The label for the tags picker in the library's filter view */
"library.filter.userData.label.tags" = "Tags";

/* The label for the 'watch again' picker in the library's filter view */
"library.filter.userData.label.watchAgain" = "Watch again?";

/* The label of the picker in the filter view to select whether the media should be marked as watched or not */
"library.filter.userData.label.watched" = "Watched?";

/* A string describing that the value of a specific media property does not matter in regards of filtering the library list and that the property may have 'any' value. */
"library.filter.value.any" = "Any";

/* The navigation bar title for the watchAgain? field in the library's filter view */
"library.filter.watchAgain.navBar.title" = "Watch Again?";

/* The navigation bar title for the watched? field in the library's filter view */
"library.filter.watched.navBar.title" = "Watched?";

/* A SF Symbols name describing a movie (e.g. 'm.square'). Used in the library list beneath the name. */
"library.list.movieSymbol" = "m.square";

/* A SF Symbols name describing a series/tv show (e.g. 's.square'). Used in the library list beneath the name. */
"library.list.showSymbol" = "s.square";

/* The label for the delete swipe action in the library list */
"library.list.swipe.delete" = "Delete";

/* The label for the reload swipe action in the library list */
"library.list.swipe.reload" = "Reload";

/* The label of the filter button in the navigation bar's menu */
"library.navBar.button.filter" = "Filter";

/* Heading for the sorting direction picker in the library menu */
"library.navBar.header.sorting" = "Sorting";

/* Title of an alert informing the user about an error while loading the media */
"lookup.alert.errorLoading.title" = "Error Loading Media";

/* A type of missing media information, i.e. some kind of information that the user did not provide. */
"mediaInformation.rating" = "rating";

/* A type of missing media information, i.e. some kind of information that the user did not provide. */
"mediaInformation.tags" = "tags";

/* A type of missing media information, i.e. some kind of information that the user did not provide. */
"mediaInformation.watchAgain" = "watch again";

/* A type of missing media information, i.e. some kind of information that the user did not provide. */
"mediaInformation.watched" = "watched";

/* Title of an alert reporting an error during the search of a media object */
"mediaSearch.alert.error.title" = "Error Performing Search";

/* Text indicating that there was an error loading the search results */
"mediaSearch.errorText" = "Error Loading Search Results";

/* Placeholder text to show while the data is loading */
"mediaSearch.loading" = "Loading...";

/* The button label to load more search results */
"mediaSearch.loadMore" = "Load more results...";

/* Text indicating that the search yielded no results. */
"mediaSearch.noResults" = "No results";

/* The current status of a media (e.g. 'In Production') */
"mediaStatus.cancelled" = "Cancelled";

/* The current status of a media (e.g. 'In Production') */
"mediaStatus.ended" = "Ended";

/* The current status of a media (e.g. 'In Production') */
"mediaStatus.inProduction" = "In Production";

/* The current status of a media (e.g. 'In Production') */
"mediaStatus.pilot" = "Pilot";

/* The current status of a media (e.g. 'In Production') */
"mediaStatus.planned" = "Planned";

/* The current status of a media (e.g. 'In Production') */
"mediaStatus.postProduction" = "Post Production";

/* The current status of a media (e.g. 'In Production') */
"mediaStatus.released" = "Released";

/* The current status of a media (e.g. 'In Production') */
"mediaStatus.returning" = "Returning";

/* The current status of a media (e.g. 'In Production') */
"mediaStatus.rumored" = "Rumored";

/* List of missing information on a media. Shown in the problems view. The argument is the formatted list. */
"problems.list.missingList %@" = "Missing: %@";

/* The navigation bar title for the problems view */
"problems.navBar.title" = "Problems";

/* The text displayed in the problems view when there are no problematic media objects */
"problems.noProblemsText" = "There are no problems in your library.";

/* A type of library problem (e.g. duplicate medias) */
"problemType.duplicateMedia.description" = "Duplicate Media Objects";

/* A recovery suggestion to resolve a library problem (e.g. duplicate medias) */
"problemType.duplicateMedia.recovery" = "Delete one of the following medias";

/* The header of the 'about me' paragraph in the pro info view */
"proInfo.aboutMe.header" = "About me";

/* The 'about me' text in the pro info view */
"proInfo.aboutMe.text" = "Hi, my name is Jonas and I'm a student at the Karlsruher Institute of Technology in Karlsruhe, Germany. In my free time I make apps for fun and this app is one of those. It started as a personal project of mine in an endeavour to catalog all the movies and tv shows I ever watched, so I would be able to recommend good movies or shows to friends. The app has grown big enough and works good enough that I thought I would publish it on the App Store, so here we are.";

/* The label for the restore button in the pro info view */
"proInfo.button.restore" = "Restore";

/* The button label in the pro info view displaying the price to buy the pro version of the app. The parameter is the localized and formatted price. */
"proInfo.buyButton.label %@" = "Buy Pro - %@";

/* The button label in the pro info view indicating that the user already bought pro. */
"proInfo.buyButton.label.disabled" = "Already Purchased";

/* The label for the cancel button in the navigation bar of the pro info view */
"proInfo.navBar.button.cancel" = "Cancel";

/* The navigation bar title for the pro info view */
"proInfo.navBar.title" = "Movie DB Pro";

/* The navigation bar title for the language chooser view */
"resolveProblems.navBar.title" = "Problems";

/* The label for the button in the settings to buy the pro version of the app */
"settings.actions.buyPro.label" = "Buy Pro";

/* The label for the 'export media' action in the settings view */
"settings.actions.exportMedia.label" = "Export Media";

/* The label for the 'export tags' action in the settings view */
"settings.actions.exportTags.label" = "Export Tags";

/* The label for the 'import media' action in the settings view */
"settings.actions.importMedia.label" = "Import Media";

/* The label for the 'import tags' action in the settings view */
"settings.actions.importTags.label" = "Import Tags";

/* The label for the 'reload media' action in the settings view */
"settings.actions.reloadMedia.label" = "Reload Media";

/* The label for the 'reset library' action in the settings view */
"settings.actions.resetLibrary.label" = "Reset Library";

/* The label for the 'reset tags' action in the settings view */
"settings.actions.resetTags.label" = "Reset Tags";

/* The label for the 'update media' action in the settings view */
"settings.actions.updateMedia.label" = "Update Media";

/* Message of an alert informing the user that the purchase could not be completed because the in-app purchase could not be found / is not configured */
"settings.alert.errorBuyingPro.message" = "The requested In-App Purchase was not found.";

/* Title of an alert informing the user that there was an error with the in-app purchase */
"settings.alert.errorBuyingPro.title" = "Unable to Purchase";

/* Title of an alert informing the user about an error while reloading the library */
"settings.alert.errorReloadingLibrary.title" = "Error Reloading Library";

/* Message of an alert informing the user about an error during export */
"settings.alert.genericExportError.message" = "There was an error creating the export file.";

/* Title of an alert informing the user about an error during export */
"settings.alert.genericExportError.title" = "Export Error";

/* Title of an error informing the user about an error during import */
"settings.alert.genericImportError.title" = "Import Error";

/* Button to undo the media import */
"settings.alert.importMedia.button.undo" = "Undo";

/* Title of an alert asking the user to confirm the import */
"settings.alert.importMedia.title" = "Import";

/* Title of an alert asking the user to confirm importing the tags */
"settings.alert.importTags.title" = "Import";

/* Title of an alert informing the user of an error while updating the library */
"settings.alert.libraryUpdateError.title" = "Update Error";

/* Message of the alert informing the user that the media reload is completed */
"settings.alert.reloadCompleted.message" = "All media objects have been reloaded.";

/* Title of the alert informing the user that the media reload is completed */
"settings.alert.reloadCompleted.title" = "Reload Completed";

/* Message of an alert asking the user for confirmation to reload the library after changing the language or region */
"settings.alert.reloadLibrary.message" = "Do you want to reload all media objects using the new language/region settings?";

/* Title of an alert asking the user for confirmation to reload the library */
"settings.alert.reloadLibrary.title" = "Reload library?";

/* Button to confirm the library reset */
"settings.alert.resetLibrary.button.delete" = "Delete";

/* Message of an alert asking the user for confirmation to reset the library */
"settings.alert.resetLibrary.message" = "This will delete all media objects in your library. Do you want to continue?";

/* Title of an alert asking the user for confirmation to reset the library */
"settings.alert.resetLibrary.title" = "Reset Library";

/* Title of an alert informing the user of an error while resetting the library */
"settings.alert.resetLibraryError.title" = "Error resetting library";

/* Button of an alert, confirming the tag reset */
"settings.alert.resetTags.button.delete" = "Delete";

/* Message of an alert asking the user to confirm resetting the tags */
"settings.alert.resetTags.message" = "This will delete all tags in your library. Do you want to continue?";

/* Title of an alert asking the user to confirm resettings the tags */
"settings.alert.resetTags.title" = "Reset Tags";

/* Title of an alert informing the user of an error during tag reset */
"settings.alert.resetTagsError.title" = "Error resetting tags";

/* Title of an alert informing the user of an error during tag import */
"settings.alert.tagImportError.title" = "Error Importing Tags";

/* Title of an alert informing the user that the library update is completed */
"settings.alert.updateMediaComplete.title" = "Update Completed";

/* The feedback button in the settings that opens a new e-mail */
"settings.feedback.label" = "Feedback";

/* The version information at the bottom of the settings page */
"settings.footer.version %@" = "Version %@";

/* The label for the close button in the navigation bar of the settings' import log */
"settings.importLog.navBar.button.close" = "Close";

/* The label for the copy button in the navigation bar of the settings' import log */
"settings.importLog.navBar.button.copy" = "Copy";

/* The navigation bar title for the import log that is being shown after importing media */
"settings.importLog.navBar.title" = "Import Log";

/* The navigation bar title for the language picker in the settings */
"settings.language.navBar.title" = "Language";

/* Title of an alert informing the user about an error while reloading the available languages */
"settings.languagePicker.alert.errorLoading.title" = "Error Updating Languages";

/* Placeholder text to display while loading the available languages in the settings */
"settings.languagePicker.loadingText" = "Loading...";

/* The 'Legal' button that leads to the legal view in the settings' navigation bar */
"settings.navBar.button.legal" = "Legal";

/* Placeholder text to show while the data is loading */
"settings.placeholder.loading" = "Loading...";

/* The label of the progress indicator that is shown in the settings when the library is reloading all media objects */
"settings.progressText.reloadLibrary" = "Reloading media objects...";

/* The label for the progress view, displayed while resetting the library */
"settings.progressText.resetLibrary" = "Resetting Library...";

/* The label for the progress view, displayed while resetting the tags */
"settings.progressText.resetTags" = "Resetting Tags...";

/* The label for the progress view, displayed while updating the media objects */
"settings.progressText.updatingMediaObjects" = "Updating media objects...";

/* The navigation bar title for the region picker in the settings */
"settings.region.navBar.title" = "Region";

/* The label of the toggle in the settings that allows the user to specify whether the search results and library should include adult content */
"settings.toggle.showAdultContent.label" = "Show Adult Content";

/* A type of show (e.g. documentary, talk show, scripted) */
"showType.documentary" = "Documentary";

/* A type of show (e.g. documentary, talk show, scripted) */
"showType.miniseries" = "Miniseries";

/* A type of show (e.g. documentary, talk show, scripted) */
"showType.news" = "News";

/* A type of show (e.g. documentary, talk show, scripted) */
"showType.reality" = "Reality";

/* A type of show (e.g. documentary, talk show, scripted) */
"showType.scripted" = "Scripted";

/* A type of show (e.g. documentary, talk show, scripted) */
"showType.talkShow" = "Talk Show";

/* A type of show (e.g. documentary, talk show, scripted) */
"showType.video" = "Video";

/* A type of sorting direction (ascending or descending) */
"sortingDirection.ascending" = "Ascending";

/* A type of sorting direction (ascending or descending) */
"sortingDirection.descending" = "Descending";

/* A type of sorting order (name, release date, ...) */
"sortingOrder.created" = "Created";

/* A type of sorting order (name, release date, ...) */
"sortingOrder.name" = "Name";

/* A type of sorting order (name, release date, ...) */
"sortingOrder.rating" = "Rating";

/* A type of sorting order (name, release date, ...) */
"sortingOrder.releaseDate" = "Release Date";

/* The label of the library tab of the main TabView */
"tabView.library.label" = "Library";

/* The label of the lists tab of the main TabView */
"tabView.lists.label" = "Lists";

/* The label of the lookup tab of the main TabView */
"tabView.lookup.label" = "Lookup";

/* The label of the problems tab of the main TabView */
"tabView.problems.label" = "Problems";

/* The label of the settings tab of the main TabView */
"tabView.settings.label" = "Settings";

